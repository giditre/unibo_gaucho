{"version":3,"sources":["helpers/data.helpers.ts","services/http.service.ts","services/config.service.ts","components/app.context.ts","components/withContext/withContext.comp.tsx","components/loader/loader.comp.tsx","helpers/pagination.helpers.ts","components/button/button.comp.tsx","components/infiniteLoader/infiniteLoader.comp.tsx","components/pagination/pagination.comp.tsx","components/table/table.comp.tsx","components/cards/cards.comp.tsx","components/formRow/formRow.comp.tsx","components/queryParams/queryParams.comp.tsx","components/popup/popup.comp.tsx","helpers/file.helpers.ts","components/formPopup/formPopup.comp.tsx","components/filterField/filterField.comp.tsx","components/page/page.comp.tsx","components/navigation/navigation.comp.tsx","components/customStyles/customStyles.comp.tsx","components/app.tsx","serviceWorker.ts","index.tsx"],"names":["dataHelpers","data","dataPath","attr","extractedData","digProps","split","prop","field","type","arrayType","HttpService","baseUrl","unauthorizedRedirectUrl","errorMessageDataPath","requestHeaders","this","url","indexOf","rawData","outputUrl","Object","keys","forEach","key","urlParamName","replace","queryParams","length","replaceParamsInUrl","params","param","name","value","urlReplaceOnly","push","firstSeparator","join","reqUrl","urlIsAbsolute","origUrl","buildUrl","method","toUpperCase","headers","assign","body","undefined","res","errorMessage","json","path","dataAtPath","extractDataByDataPath","status","statusText","redirectUrl","encodeURIComponent","document","location","href","Error","getErrorMessage","responseType","fetch","ok","text","handleError","buildRequest","makeRequest","httpService","HTTPService","endsWith","import","default","getRemoteConfig","config","isValid","configSchema","require","validate","Ajv","allErrors","verbose","compile","firstError","errors","message","console","error","AppContext","React","createContext","activePage","setError","setActivePage","withAppContext","Component","props","Consumer","context","Loader","className","paginationHelpers","page","parseInt","_page","_itemsPerPage","_total","Button","color","children","InfiniteLoader","Pagination","callbacks","pagination","customLabels","previousTitle","previousPageTitle","nextTitle","nextPageTitle","disabled","hasPreviousPage","onClick","previousPage","title","aria-hidden","hasNextPage","nextPage","Table","items","fields","customActions","editLabel","buttons","editItem","deleteLabel","deleteItem","actionColumnHeader","tableColumnHeaders","actions","paginationCallbacks","getNextPage","getPreviousPage","renderTableRow","item","rowIdx","map","fieldIdx","truncate","origField","origItem","src","alt","label","fieldValue","target","rel","urlLabel","style","backgroundColor","renderTableCell","put","call","action","idx","icon","delete","renderTableContent","useEffect","clientHeight","window","innerHeight","dataLength","next","hasMore","loader","Cards","renderActions","cardIdx","renderCard","Fragment","renderRow","renderCardSkeleton","duration","startingIndex","Array","from","limit","renderSkeletons","FormRow","direction","showReset","onChange","useState","optionSources","setOptionSources","pageHeaders","addArrayItemLabel","addArrayItem","clearLabel","clearInput","renderArrayItems","originalField","array","itemIdx","inputField","renderFieldInput","fieldName","updatedArray","localValue","splice","removeItemToFieldArray","aria-label","e","preventDefault","addItemToFieldArray","changeCallback","inputProps","defaultPlaceholder","placeholder","readonly","required","checked","optionSource","a","async","actualMethod","result","optionSourceData","option","valuePath","displayPath","display","toast","loadOptionSourceFromRemote","sortBy","finalOptions","options","sortedOptions","orderBy","placeholders","object","number","valueAsNumber","email","password","accept","file","date","originalName","QueryParams","initialParams","paginationConfig","submitCallback","setQueryParams","submit","formChanged","submitAfterChange","updatedQueryParams","filteredParams","filter","includes","onSubmit","queryParam","portalRoot","getElementById","createElement","setAttribute","append","PortalPopup","el","componentDidMount","appendChild","componentWillUnmount","removeChild","ReactDOM","createPortal","Popup","_handleKeyDown","show","closeCallback","keyCode","closeLabel","closeForm","ref","refCallback","addEventListener","bind","removeEventListener","fileHelpers","fieldIndex","flatten","unflatten","FormPopup","getSingleConfig","methodConfig","fieldsCopy","JSON","parse","stringify","loading","setLoading","formFields","setFormFields","finalRawData","setFinalRawData","submitForm","finalObject","includeOriginalFields","formData","FormData","containFiles","isMultipartForm","validationError","checkIfFieldIsObject","fileInput","querySelector","files","firstFile","success","updatedFormFields","flattenData","initFormFields","FilterField","toLowerCase","buildInitQueryParamsAndPaginationState","initQueryParams","initialPagination","descending","find","Page","useParams","useHistory","pageMethods","methods","getAllConfig","getAll","infiniteScroll","getSingle","postConfig","post","putConfig","deleteConfig","addItemLabel","addItem","addItemFormTitle","formTitles","editItemFormTitle","openedPopup","setOpenedPopup","setPagination","setItems","setFilter","openEditPopup","updateItem","openCustomActionPopup","performAction","getAllRequest","dataTransform","isArray","orderedItems","total","newPaginationState","getUpdatedPaginationState","confirm","updatedParams","remove","submitQueryParams","reset","paramsToUrl","queryState","newState","nextActivePage","pages","p","pIdx","id","parsedParams","QueryString","search","finalQueryParams","decodeURIComponent","extractQueryParams","description","fieldsToFilter","filterable","currentCountFrom","currentCountTo","itemsCount","renderPaginationStateLabel","filteredItems","passFilter","newPage","renderItemsUI","renderPageContent","refreshData","Navigation","isOpened","setIsOpened","to","activeClassName","CustomStyles","cssVars","styles","vars","arr","dangerouslySetInnerHTML","__html","defaultAppName","changeFavicon","link","oldLink","head","App","firstLoad","setFirstLoad","setConfig","appName","loadConfig","windowConfig","RESTool","remoteConfig","ConfigService","loadDefaultConfig","favicon","remoteUrl","validateConfig","Provider","customStyles","scrollDuration","cosParameter","scrollY","scrollCount","oldTimestamp","performance","now","requestAnimationFrame","step","newTimestamp","Math","PI","scrollTo","round","cos","scrollToTop","exact","component","position","POSITION","TOP_CENTER","autoClose","draggable","Boolean","hostname","match","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2d3c8242.chunk.js","sourcesContent":["import { IConfigInputField } from \"../common/models/config.model\";\n\nclass DataHelpers {\n\n  public extractDataByDataPath(data: any, dataPath: string, attr: string | null = null) {\n    if (!data || !dataPath) {\n      if (attr) {\n        return data[attr];\n      }\n      return data;\n    }\n\t\n    let extractedData: any = data;\n    const digProps: string[] = dataPath.split('.');\n\n    for (let prop of digProps) {\n      if (typeof extractedData[prop] !== 'undefined') {\n        extractedData = extractedData[prop];\n      } else {\n        return null;\n      }\n    }\n\n    if (typeof extractedData === 'undefined') {\n      return null;\n    }\n\n    if (attr) {\n      return extractedData[attr];\n    }\n\n    return extractedData;\n  }\n\n  public checkIfFieldIsObject(field: IConfigInputField): boolean {\n    if (field.type === 'object') {\n      return true;\n    }\n\n    if (field.type === 'array') {\n      if (!field.arrayType || field.arrayType === 'object') {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n\nexport const dataHelpers = new DataHelpers();","import { TConfigMethod, IQueryParam } from '../common/models/config.model';\nimport { dataHelpers } from '../helpers/data.helpers';\n\nexport type ResponseType = 'json' | 'text' | 'boolean' | 'status';\n\nexport interface IFetchParams {\n  origUrl: string\n  method?: TConfigMethod\n  headers?: any\n  queryParams?: IQueryParam[]\n  rawData?: any\n  body?: any\n  responseType?: ResponseType\n}\n\nclass HttpService {\n  public baseUrl: string;\n  public unauthorizedRedirectUrl: string;\n  public errorMessageDataPath: string | string[];\n  public requestHeaders: any;\n\n  constructor(baseUrl: string = '', unauthorizedRedirectUrl: string = '', errorMessageDataPath: string = '') {\n    this.baseUrl = baseUrl || '';\n    this.unauthorizedRedirectUrl = unauthorizedRedirectUrl || '';\n    this.errorMessageDataPath = errorMessageDataPath || '';\n    this.requestHeaders = {};\n  }\n\n  private urlIsAbsolute(url: string) {\n    if (url.indexOf('http') === 0 || url.indexOf('https') === 0) {\n      return true;\n    }\n    return false;\n  }\n\n  private replaceParamsInUrl(url: string, rawData?: any): string {\n    if (!rawData || typeof rawData !== 'object') {\n      return url;\n    }\n\n    let outputUrl = url;\n\n    Object.keys(rawData).forEach((key) => {\n      const urlParamName = `:${key}`;\n      outputUrl = outputUrl.replace(urlParamName, rawData[key] as string);\n    });\n\n    return outputUrl;\n  }\n\n  private buildUrl(url: string, queryParams: IQueryParam[] = [], rawData?: any): string {\n    if (!queryParams || !queryParams.length) {\n      return this.replaceParamsInUrl(url, rawData);\n    }\n\n    let outputUrl = url;\n    const params = [];\n\n    for (let param of queryParams) {\n      if (!param.name || typeof param.value === 'undefined') {\n        continue;\n      }\n\n      // TODO: Add docs to \"urlReplaceOnly\"\n      if (param.urlReplaceOnly) {\n        const urlParamName = `:${param.name}`;\n        outputUrl = outputUrl.replace(urlParamName, param.value as string);\n      } else {\n        params.push(`${param.name}=${param.value || ''}`);\n      }\n    }\n\n    if (params.length) {\n      const firstSeparator = url.indexOf('?') >= 0 ? '&' : '?';\n      return outputUrl + firstSeparator + params.join('&');\n    }\n\n    return outputUrl;\n  }\n\n  private buildRequest(params: IFetchParams): { url: string, params: any } {\n    const reqUrl: string = this.urlIsAbsolute(params.origUrl) ? params.origUrl : this.baseUrl + params.origUrl;\n    const finalUrl: string = this.buildUrl(reqUrl, params.queryParams, params.rawData);\n    const requestParams = {\n      method: params.method ? params.method.toUpperCase() : 'GET',\n      headers: Object.assign({}, this.requestHeaders, params.headers || {}),\n      body: params.method === 'post' || params.method === 'put' || params.method === 'patch' ? params.body : undefined\n    };\n\n    return {\n      url: finalUrl,\n      params: requestParams\n    };\n  }\n\n  private async getErrorMessage(res: Response | any): Promise<string> {\n    let errorMessage: string = '';\n\n    try {\n      const body = await res.json();\n\n      for (const path of this.errorMessageDataPath) {\n        const dataAtPath = dataHelpers.extractDataByDataPath(body, path);\n\n        if (dataAtPath) {\n          errorMessage = dataAtPath;\n        }\n      }\n    } catch { } // TODO: proper handling of errors (^.^)\n\n    return errorMessage && errorMessage.length ?\n      errorMessage :\n      `${res.status} - ${res.statusText || ''}`;\n  }\n\n  private async handleError(res: Response) {\n    // In case response status is \"Unauthorized\", redirect to relevant url\n    if (res.status === 401 && this.unauthorizedRedirectUrl) {\n      const redirectUrl: string = this.unauthorizedRedirectUrl.replace(':returnUrl', encodeURIComponent(document.location.href));\n      document.location.href = redirectUrl;\n      return;\n    }\n\n    throw new Error(await this.getErrorMessage(res));\n  }\n\n  private async makeRequest(url: string, params: any = {}, responseType: ResponseType = 'json') {\n    const res: Response = await fetch(url, Object.assign({}, params, {}));\n\n    if (res.ok) {\n      switch (responseType) {\n        case 'json':\n          return await res.json();\n        case 'text':\n          return await res.text();\n        case 'boolean':\n          return true;\n        default:\n          return true;\n      }\n    }\n\n    await this.handleError(res);\n  }\n\n  public async fetch({ method, origUrl, queryParams, rawData, body, headers, responseType }: IFetchParams) {\n    const { url, params } = this.buildRequest({ method, origUrl, queryParams, rawData, body, headers });\n    return await this.makeRequest(url, params, responseType);\n  }\n}\n\nexport default HttpService;\n","import HTTPService from './http.service';\nimport { IConfig } from '../common/models/config.model';\nimport Ajv from 'ajv';\n\nconst httpService: HTTPService = new HTTPService();\n\nclass ConfigService extends HTTPService {\n\n  public async getRemoteConfig(url: string) {\n    if (url.endsWith('.js')) {\n      return (await import(/* webpackIgnore: true */url)).default;\n    }\n    return await httpService.fetch({\n      origUrl: url,\n    });\n  }\n\n  public async loadDefaultConfig() {\n    try {\n      return await this.getRemoteConfig('/config.json');\n    } catch (e) {\n      return (await this.getRemoteConfig('/config.js'));\n    }\n  }\n\n  public validateConfig(config: IConfig | null): { isValid: boolean, errorMessage: string | null } {\n    if (config === null) {\n      return {\n        isValid: true,\n        errorMessage: null,\n      }\n    }\n    const configSchema = require('../assets/schemas/config.schema.json');\n    const ajv = new Ajv({\n      allErrors: true,\n      verbose: true,\n    });\n    const validate = ajv.compile(configSchema);\n    const isValid = validate(config);\n    if (typeof isValid !== 'boolean') {\n      throw new Error('Unexpected asynchronous JSON validation');\n    }\n    if (isValid) {\n      return {\n        isValid,\n        errorMessage: null,\n      }\n    }\n    const firstError = validate.errors ? validate.errors[0] : undefined;\n    let errorMessage: string | null = null;\n    if (firstError?.message && firstError?.dataPath) {\n      errorMessage = `Error parsing configuration at \"${firstError.dataPath}\": ${firstError.message}`\n    } else if (firstError?.message) {\n      errorMessage = `Error parsing configuration: ${firstError.message}`\n    } else if (firstError?.dataPath) {\n      errorMessage = `Error parsing configuration at \"${firstError.dataPath}\"`\n    } else {\n      errorMessage = `Error parsing configuration`;\n    }\n    console.error(errorMessage);\n    console.error('All configuration errors: ', validate.errors);\n    return {\n      isValid,\n      errorMessage,\n    };\n  }\n\n}\n\nexport default new ConfigService();\n","import React from 'react';\nimport { IConfig, IConfigPage } from '../common/models/config.model';\nimport HttpService from '../services/http.service';\n\nexport interface IAppContext {\n  config: IConfig | null\n  activePage: IConfigPage | null\n  error: string | null\n  setError: (error: string | null) => void\n  setActivePage: (activePage: IConfigPage | null) => void\n  httpService: HttpService\n}\n\nexport const AppContext = React.createContext<IAppContext>({\n  config: null,\n  activePage: null,\n  error: null,\n  setError: () => {},\n  setActivePage: () => {},\n  httpService: new HttpService()\n});","import React from 'react';\nimport { AppContext } from '../app.context';\n\nexport const withAppContext = (Component: any) => {\n  return (props: any) => (\n    <AppContext.Consumer>    \n      {(context) => {\n        return <Component {...props} context={context} />\n      }}\n    </AppContext.Consumer>\n  );\n};","import React from 'react';\n\nimport './loader.scss';\n\nexport const Loader = () => {\n  return (\n    <div className=\"app-loader cp-spinner cp-balls small\"></div>\n  );\n};","class PaginationHelpers {\n  public hasPreviousPage(page: string | number | undefined): boolean {\n    if (page === undefined) {\n      return false;\n    }\n\n    if (typeof page === 'string') {\n      return parseInt(page) > 1;\n    }\n\n    return page > 1;\n  }\n\n  public hasNextPage(_page: string | number, _itemsPerPage: string | number, _total: string | number | undefined): boolean {\n    if (_total === undefined) {\n      return true;\n    }\n    const page = typeof _page === 'string' ? parseInt(_page) : _page;\n    const itemsPerPage = typeof _itemsPerPage === 'string' ? parseInt(_itemsPerPage) : _itemsPerPage;\n    const total = typeof _total === 'string' ? parseInt(_total) : _total;\n\n    return page * itemsPerPage < total;\n  }\n}\n\nexport const paginationHelpers = new PaginationHelpers();","import React from 'react';\n\nimport './button.scss';\n\ninterface IProps {\n  children: any\n  type?: 'submit' | 'button' | 'reset'\n  title?: string\n  className?: string\n  onClick?: (e: any) => void\n  color?: 'gray' | 'blue' | 'green' | 'red'\n  disabled?: boolean\n}\n\nexport const Button = (props: IProps) => {\n  return (\n    <button {...props} className={`button ${props.className || ''} ${props.color || ''}`}>{props.children}</button>\n  );\n};","import React from 'react';\n\nimport './infiniteLoader.scss';\n\nexport const InfiniteLoader = () => {\n  return (\n    <div className=\"app-infinite-loader cp-spinner cp-balls small\"></div>\n  );\n};","import React from 'react';\nimport { ICustomLabels } from '../../common/models/config.model';\nimport { IPaginationState } from '../../common/models/states.model';\nimport { Button } from '../button/button.comp';\n\nimport './pagination.scss';\n\ninterface IProps {\n  pagination: IPaginationState\n  callbacks: {\n    previousPage: () => void,\n    nextPage: () => void,\n  }\n  customLabels?: ICustomLabels\n}\n\nexport const Pagination = ({ callbacks, pagination, customLabels }: IProps) => {\n  const previousTitle = customLabels?.pagination?.previousPageTitle || 'Previous page';\n  const nextTitle = customLabels?.pagination?.nextPageTitle || 'Next page';\n  return (\n    <div className=\"pagination-wrapper\">\n      <Button disabled={!pagination.hasPreviousPage} onClick={() => callbacks.previousPage()} title={previousTitle}>\n        <i className=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\n      </Button>\n      <Button disabled={!pagination.hasNextPage} onClick={() => callbacks.nextPage()} title={nextTitle}>\n        <i className=\"fa fa-arrow-right\" aria-hidden=\"true\" ></i>\n      </Button>\n    </div>\n  );\n};","import React, { useEffect } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport { IConfigDisplayField, IConfigCustomAction, ICustomLabels } from '../../common/models/config.model';\nimport { dataHelpers } from '../../helpers/data.helpers';\nimport { Button } from '../button/button.comp';\nimport { InfiniteLoader } from '../infiniteLoader/infiniteLoader.comp';\nimport { IPaginationState } from '../../common/models/states.model';\nimport { Pagination } from '../pagination/pagination.comp';\n\nimport './table.scss';\n\ninterface IProps {\n  items: any[]\n  pagination?: IPaginationState\n  callbacks: {\n    delete: ((item: any) => void) | null\n    put: ((item: any) => void) | null\n    action: (item: any, action: IConfigCustomAction) => void\n    getPreviousPage: (() => void) | null\n    getNextPage: (() => void) | null\n  }\n  fields: IConfigDisplayField[]\n  customActions?: IConfigCustomAction[]\n  customLabels?: ICustomLabels\n}\n\nexport const Table = ({ items, fields, pagination, callbacks, customActions, customLabels }: IProps) => {\n  const editLabel = customLabels?.buttons?.editItem || 'Edit';\n  const deleteLabel = customLabels?.buttons?.deleteItem || 'Delete';\n  const actionColumnHeader = customLabels?.tableColumnHeaders?.actions || 'Actions';\n  const paginationCallbacks = {\n    nextPage: callbacks.getNextPage || (() => { return; }),\n    previousPage: callbacks.getPreviousPage || (() => { return; }),\n  };\n\n  function renderTableCell(origField: IConfigDisplayField, origItem: any, value: any) {\n    if (origField.type === 'boolean') {\n      value = value ? true : false;\n    }\n\n    if (value && typeof value === 'object') {\n      return 'object';\n    }\n\n    switch (origField.type) {\n      case 'text':\n        return <span>{value}</span>;\n      case 'boolean':\n        return <div className={`bool ${value ? 'true' : 'false'}`}></div>;\n      case 'image':\n        return <img src={value || ''} alt={value || origField.label || origField.name} />;\n      case 'url':\n        let url: string = origField.url || value || '';\n\n        // Replace all url vars\n        fields.forEach((field) => {\n          const fieldValue = dataHelpers.extractDataByDataPath(origItem, field.dataPath, field.name);\n          url = url.replace(`:${field.name}`, fieldValue);\n        });\n\n        return <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{origField.urlLabel || value}</a>;\n      case 'colorbox':\n        return <div className=\"colorbox\" style={{ backgroundColor: value }}></div>;\n      default:\n        return value;\n    }\n  }\n\n  function renderTableRow(item: any, rowIdx: number) {\n    return (\n      <tr key={`tr_${rowIdx}`}>\n        {\n          fields.map((field, fieldIdx) => {\n            const value = dataHelpers.extractDataByDataPath(item, field.dataPath, field.name);\n            return (\n              <td className={field.truncate ? 'truncate' : ''} key={`td_${rowIdx}_${fieldIdx}`}>\n                {renderTableCell(field, item, value)}\n              </td>\n            );\n          })\n        }\n        <td>\n          <div className=\"actions-wrapper\">\n            {\n              callbacks.put &&\n              <Button onClick={() => callbacks.put?.(item)} title={editLabel}>\n                <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\n              </Button>\n            }\n            {\n              (customActions && customActions.length > 0) &&\n              customActions.map((action, idx) => (\n                <Button key={`action_${rowIdx}_${idx}`} onClick={() => callbacks.action(item, action)} title={action.name}>\n                  <i className={`fa fa-${action.icon || 'cogs'}`} aria-hidden=\"true\"></i>\n                </Button>\n              ))\n            }\n            {\n              callbacks.delete &&\n              <Button onClick={() => callbacks.delete?.(item)} title={deleteLabel}>\n                <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n              </Button>\n            }\n          </div>\n        </td>\n      </tr>\n    );\n  }\n\n  function renderTableContent() {\n    return (\n      <table className=\"pure-table\">\n        <thead>\n          <tr>\n            {\n              fields.map((field) => {\n                return <th key={`th_${field.name}`}>{field.label || field.name}</th>;\n              })\n            }\n            <th>{actionColumnHeader}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            items.map(renderTableRow)\n          }\n        </tbody>\n      </table>\n    );\n  }\n\n  useEffect(() => {\n    if (\n      pagination?.type === 'infinite-scroll'\n      && document.body.clientHeight <= window.innerHeight\n      && pagination?.hasNextPage\n    ) {\n      paginationCallbacks.nextPage();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (pagination?.type === 'infinite-scroll') {\n    return (\n      <InfiniteScroll\n        dataLength={items.length}\n        next={callbacks.getNextPage || (() => null)}\n        hasMore={pagination?.hasNextPage || false}\n        loader={<InfiniteLoader />}\n      >\n        {renderTableContent()}\n      </InfiniteScroll>\n    );\n  }\n\n  return (\n    <div className=\"table-wrapper\">\n      {renderTableContent()}\n      {\n        pagination &&\n        pagination.type === 'buttons' &&\n        <Pagination\n          callbacks={paginationCallbacks}\n          pagination={pagination}\n          customLabels={customLabels}\n        ></Pagination>\n      }\n    </div >\n  );\n}\n","import React, { useEffect } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Skeleton from 'react-loading-skeleton';\n\nimport { IConfigDisplayField, IConfigCustomAction, ICustomLabels } from '../../common/models/config.model';\nimport { IPaginationState } from '../../common/models/states.model';\nimport { dataHelpers } from '../../helpers/data.helpers';\nimport { Button } from '../button/button.comp';\nimport { Pagination } from '../pagination/pagination.comp';\n\nimport './cards.scss';\n\ninterface IProps {\n  items: any[]\n  pagination?: IPaginationState\n  callbacks: {\n    delete: ((item: any) => void) | null\n    put: ((item: any) => void) | null\n    action: (item: any, action: IConfigCustomAction) => void\n    getNextPage: (() => void) | null\n    getPreviousPage: (() => void) | null\n  }\n  fields: IConfigDisplayField[]\n  customActions?: IConfigCustomAction[]\n  customLabels?: ICustomLabels\n}\n\nexport const Cards = ({ items, fields, callbacks, customActions, customLabels, pagination }: IProps) => {\n  const editLabel: string = customLabels?.buttons?.editItem || 'Edit';\n  const deleteLabel: string = customLabels?.buttons?.deleteItem || 'Delete';\n  const paginationCallbacks = {\n    nextPage: callbacks.getNextPage || (() => { return; }),\n    previousPage: callbacks.getPreviousPage || (() => { return; }),\n  };\n\n  function renderRow(origField: IConfigDisplayField, origItem: any, value: any) {\n    if (origField.type === 'boolean') {\n      value = value ? true : false;\n    }\n\n    if (value && typeof value === 'object') {\n      return 'object';\n    }\n\n    switch (origField.type) {\n      case 'text':\n        return <span>{value}</span>;\n      case 'boolean':\n        return <div className={`bool ${value ? 'true' : 'false'}`}></div>;\n      case 'image':\n        if (!value) {\n          return <React.Fragment></React.Fragment>;\n        }\n        return <img src={value || ''} alt={value || origField.label || origField.name} />;\n      case 'url':\n        let url: string = origField.url || value || '';\n\n        // Replace all url vars\n        fields.forEach((field) => {\n          const fieldValue = dataHelpers.extractDataByDataPath(origItem, field.dataPath, field.name);\n          url = url.replace(`:${field.name}`, fieldValue);\n        });\n\n        return <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{origField.urlLabel || value}</a>;\n      case 'colorbox':\n        return <div className=\"colorbox\" style={{ backgroundColor: value }}></div>;\n      default:\n        return value;\n    }\n  }\n\n  function renderActions(item: any, cardIdx: number) {\n    return (\n      <div className=\"actions-wrapper\">\n        {\n          callbacks.put &&\n          <Button onClick={() => callbacks.put?.(item)} title={editLabel}>\n            <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\n          </Button>\n        }\n        {\n          (customActions && customActions.length > 0) &&\n          customActions.map((action, idx) => (\n            <Button key={`action_${cardIdx}_${idx}`} onClick={() => callbacks.action(item, action)} title={action.name}>\n              <i className={`fa fa-${action.icon || 'cogs'}`} aria-hidden=\"true\"></i>\n            </Button>\n          ))\n        }\n        {\n          callbacks.delete &&\n          <Button onClick={() => callbacks.delete?.(item)} title={deleteLabel}>\n            <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n          </Button>\n        }\n      </div>\n    );\n  }\n\n  function renderCard(item: any, cardIdx: number) {\n    return (\n      <div className=\"card\" key={`card_${cardIdx}`}>\n        {\n          fields.map((field, fieldIdx) => {\n            const value = dataHelpers.extractDataByDataPath(item, field.dataPath, field.name);\n            return (\n              <div className={`card-row ${field.type}`} key={`card_${cardIdx}_${fieldIdx}`}>\n                {\n                  field.type !== 'image' &&\n                  <label>{field.label || field.name}: </label>\n                }\n                {renderRow(field, item, value)}\n              </div>\n            );\n          })\n        }\n        {renderActions(item, cardIdx)}\n      </div>\n    );\n  }\n\n  function renderCardSkeleton(cardIdx: number) {\n    return (\n      <div className=\"card\" key={`card_${cardIdx}`}>\n        {\n          fields.map((field, fieldIdx) => {\n            return (\n              <div className={`card-row ${field.type}`} key={`card_${cardIdx}_${fieldIdx}`}>\n                {\n                  field.type !== 'image' &&\n                  <label>{field.label || field.name}: </label>\n                }\n                <Skeleton duration={0.6} />\n              </div>\n            );\n          })\n        }\n        {renderActions({}, cardIdx)}\n      </div>\n    );\n  }\n\n  function renderSkeletons() {\n    const startingIndex = items.length;\n    const skeletonsIndexes = Array.from(Array(pagination?.limit).keys()).map(value => value + startingIndex);\n    return skeletonsIndexes.map(renderCardSkeleton);\n  }\n\n  useEffect(() => {\n    if (\n      pagination?.type === 'infinite-scroll'\n      && document.body.clientHeight <= window.innerHeight\n      && callbacks.getNextPage\n      && pagination?.hasNextPage\n    ) {\n      callbacks.getNextPage();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (pagination?.type === 'infinite-scroll') {\n    return (\n      <InfiniteScroll className=\"cards-wrapper\"\n        dataLength={items.length}\n        next={callbacks.getNextPage || (() => null)}\n        hasMore={pagination?.hasNextPage || false}\n        loader={renderSkeletons()}\n      >\n        {items.map(renderCard)}\n      </InfiniteScroll>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"cards-wrapper\">\n        {items.map(renderCard)}\n      </div>\n      {\n        pagination &&\n        pagination.type === 'buttons' &&\n        <Pagination\n          callbacks={paginationCallbacks}\n          pagination={pagination}\n        ></Pagination>\n      }\n    </React.Fragment>\n  )\n}","import React, { useState } from 'react';\nimport { orderBy } from 'natural-orderby';\nimport { toast } from 'react-toastify';\n\nimport { IConfigInputField, IConfigOptionSource, ICustomLabels } from '../../common/models/config.model';\nimport { Button } from '../button/button.comp';\nimport { withAppContext } from '../withContext/withContext.comp';\nimport { IAppContext } from '../app.context';\nimport { dataHelpers } from '../../helpers/data.helpers';\n\nimport './formRow.scss';\n\ninterface IProps {\n  context: IAppContext\n  field: IConfigInputField\n  onChange: (fieldName: string, value: any, submitAfterChange?: boolean) => void\n  showReset?: boolean\n  direction?: 'row' | 'column'\n}\n\nexport const FormRow = withAppContext(({ context, field, direction, showReset, onChange }: IProps) => {\n  const [optionSources, setOptionSources] = useState<any>({});\n  const { httpService, activePage, config } = context;\n  const pageHeaders: any = activePage?.requestHeaders || {};\n  const customLabels: ICustomLabels | undefined = { ...config?.customLabels, ...activePage?.customLabels };\n  const addArrayItemLabel = customLabels?.buttons?.addArrayItem || 'Add Item';\n  const clearLabel = customLabels?.buttons?.clearInput || 'Clear';\n\n  async function loadOptionSourceFromRemote(fieldName: string, optionSource: IConfigOptionSource) {\n    try {\n      const { url, dataPath, actualMethod, requestHeaders } = optionSource;\n\n      if (!url) {\n        throw new Error(`URL option source (for field \"${fieldName}\") is empty.`);\n      }\n\n      const result = await httpService.fetch({\n        method: actualMethod || 'get',\n        origUrl: url,\n        queryParams: [],\n        headers: Object.assign({}, pageHeaders, requestHeaders || {}),\n      });\n\n      const extractedData = dataHelpers.extractDataByDataPath(result, dataPath);\n\n      if (!extractedData || !extractedData.length) {\n        throw new Error(`Option source data is empty (for field \"${fieldName}\")`);\n      }\n\n      // Map option source to fields\n      const optionSourceData = extractedData.map((option: any, idx: number) => {\n        const { valuePath, displayPath } = optionSource;\n\n        if (typeof option === 'string') {\n          return option;\n        }\n\n        return {\n          display: displayPath && option[displayPath] ? option[displayPath] : `Option ${idx + 1}`,\n          value: valuePath && option[valuePath] ? option[valuePath] : `${idx}`,\n        };\n      });\n\n      setOptionSources({\n        ...optionSources,\n        [fieldName]: optionSourceData\n      });\n    } catch (e) {\n      toast.error(e.message);\n    }\n  }\n\n  function addItemToFieldArray(e: any, originalField: IConfigInputField) {\n    e.preventDefault();\n\n    onChange(field.name, [\n      ...(originalField.value || []),\n      ''\n    ]);\n  }\n\n  function removeItemToFieldArray(originalField: IConfigInputField, idx: number) {\n    const updatedArray = [\n      ...(originalField.value || [])\n    ];\n\n    updatedArray.splice(idx, 1);\n\n    onChange(field.name, updatedArray);\n  }\n\n  function renderArrayItems(originalField: IConfigInputField) {\n    const array: any[] = originalField.value || [];\n\n    return (\n      <div className=\"array-form\">\n        {\n          array.map((item, itemIdx) => {\n            const inputField = renderFieldInput({\n              value: item,\n              name: `${originalField.name}.${itemIdx}`,\n            } as IConfigInputField, (fieldName, value) => {\n              const updatedArray = (originalField.value || []).map((localValue: any, idx: number) => {\n                if (idx === itemIdx) {\n                  return value;\n                }\n                return localValue;\n              });\n\n              onChange(originalField.name, updatedArray);\n            });\n\n            return (\n              <div className=\"array-form-item\" key={`array_form_${itemIdx}`}>\n                {inputField}\n                <i title={clearLabel} onClick={() => removeItemToFieldArray(originalField, itemIdx)} aria-label=\"Remove\" className=\"clear-input fa fa-times\"></i>\n              </div>\n            )\n          })\n        }\n        <Button className=\"add-array-item\" onClick={(e) => addItemToFieldArray(e, originalField)} title={addArrayItemLabel}>\n          <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\n        </Button>\n      </div>\n    );\n  }\n\n  function renderFieldInput(field: IConfigInputField, changeCallback: (fieldName: string, value: any, submitAfterChange?: boolean) => void) {\n    const inputProps = (defaultPlaceholder: string = '') => {\n      return {\n        value: field.value,\n        placeholder: field.placeholder || defaultPlaceholder,\n        disabled: field.readonly,\n        required: field.required,\n        onChange: (e: any) => changeCallback(field.name, e.target.value),\n      };\n    };\n\n    switch (field.type) {\n      case 'boolean':\n        return <input type=\"checkbox\" {...inputProps()} checked={field.value} onChange={(e) => changeCallback(field.name, e.target.checked, true)} />;\n      case 'select':\n        {\n          const { optionSource } = field;\n\n          if (optionSource && !optionSources[field.name]) {\n            loadOptionSourceFromRemote(field.name, optionSource);\n            return <select {...inputProps()}><option>-- Loading Options... --</option></select>\n          }\n\n          const sortBy = field.optionSource?.sortBy;\n          const finalOptions: { value: string, display: string }[] = optionSources[field.name] || field.options || [];\n          const sortedOptions = orderBy(finalOptions, typeof sortBy === 'string' ? [sortBy] : (sortBy || []));\n\n          return (\n            <select {...inputProps()}>\n              <option>-- Select --</option>\n              {\n                sortedOptions.map((option, idx) => {\n                  const key = `option_${idx}_`;\n                  if (typeof option !== 'object') {\n                    return <option key={`${key}_${option}`} value={option}>{option}</option>\n                  }\n                  return <option key={`${key}_${option.value}`} value={option.value}>{option.display || option.value}</option>\n                })\n              }\n            </select>\n          );\n        };\n      case 'object':\n        return <textarea {...inputProps(customLabels?.placeholders?.object || 'Enter JSON...')}></textarea>;\n      case 'array': {\n        const { arrayType, value } = field;\n        if (!value || !arrayType || arrayType === 'object') {\n          return <textarea {...inputProps(customLabels?.placeholders?.array || 'Enter JSON array...')}></textarea>;\n        }\n        return renderArrayItems(field);\n      }\n      case 'long-text':\n        return <textarea {...inputProps(customLabels?.placeholders?.text || 'Enter text...')}></textarea>;\n      case 'number':\n      case 'integer':\n        return <input type=\"number\" {...inputProps(customLabels?.placeholders?.number || '0')} onChange={(e) => changeCallback(field.name, e.target.valueAsNumber)} />;\n      case 'color':\n        return <input type=\"color\" {...inputProps(customLabels?.placeholders?.color || 'Enter color...')} />;\n      case 'email':\n        return <input type=\"email\" {...inputProps(customLabels?.placeholders?.email || 'Enter email...')} />;\n      case 'password':\n        return <input type=\"password\" {...inputProps(customLabels?.placeholders?.password || 'Enter password...')} />;\n      case 'hidden':\n        return <input type=\"hidden\" value={field.value} />;\n      case 'file':\n        return <input type=\"file\" accept={field.accept || '*'} placeholder={field.placeholder || customLabels?.placeholders?.file || 'Select file...'} name={field.name || 'file'} disabled={field.readonly} required={field.required} />;\n      case 'note':\n        return <p className=\"note\">{field.value}</p>;\n      case 'date':\n        return <input type=\"date\" {...inputProps(customLabels?.placeholders?.date || 'Enter date...')} />;\n      case 'text':\n      default:\n        return <input type=\"text\" {...inputProps(customLabels?.placeholders?.text || 'Enter text...')} />;\n    }\n  }\n\n  return (\n    <div className={`form-row ${direction || 'row'}`}>\n      {\n        field.type !== 'hidden' &&\n        <label>{field.label || field.originalName}{field.required ? ' *' : ''}</label>\n      }\n      {renderFieldInput(field, onChange)}\n      {\n        (showReset && !field.readonly && field.value && field.value.length > 0) &&\n        <i title={clearLabel} onClick={() => onChange(field.name, '', true)} aria-label=\"Clear\" className=\"clear-input fa fa-times\"></i>\n      }\n    </div>\n  );\n});\n","import React, { useState, useEffect } from 'react';\n\nimport { IConfigInputField, IConfigPagination } from '../../common/models/config.model';\nimport { FormRow } from '../formRow/formRow.comp';\nimport { Button } from '../button/button.comp';\n\nimport './queryParams.scss';\n\ninterface IProps {\n  initialParams: IConfigInputField[]\n  paginationConfig?: IConfigPagination\n  submitCallback: (queryParams: IConfigInputField[], reset?: boolean) => void\n}\n\nexport const QueryParams = ({ initialParams, paginationConfig, submitCallback }: IProps) => {\n  const [queryParams, setQueryParams] = useState<IConfigInputField[]>(initialParams);\n\n  function submit(e?: any) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    if (paginationConfig && paginationConfig.type === 'infinite-scroll') {\n      submitCallback(queryParams, true);\n    } else {\n      submitCallback(queryParams);\n    }\n  }\n\n  function formChanged(fieldName: string, value: any, submitAfterChange?: boolean) {\n    const updatedQueryParams: IConfigInputField[] = [...queryParams].map((field) => {\n      if (field.name === fieldName) {\n        field.value = value;\n      }\n\n      return field;\n    });\n\n    setQueryParams(updatedQueryParams);\n\n    if (submitAfterChange) {\n      submit();\n    }\n  }\n\n  useEffect(() => {\n    if (paginationConfig && paginationConfig.type === 'infinite-scroll') {\n      const filteredParams = initialParams.filter(param => !['page', 'limit'].includes(param.name));\n      setQueryParams(filteredParams);\n    } else {\n      setQueryParams(initialParams);\n    }\n  }, [paginationConfig, initialParams]);\n\n  if (!queryParams.length) {\n    return <React.Fragment></React.Fragment>;\n  }\n\n  return (\n    <section className=\"query-params-form\">\n      <h5>Query Params:</h5>\n      <form onSubmit={submit}>\n        {\n          queryParams.map((queryParam, idx) => {\n            return (\n              <FormRow\n                key={`query_param_${idx}`}\n                field={queryParam}\n                onChange={formChanged}\n                showReset={!queryParam.type || queryParam.type === 'text'}\n              />\n            );\n          })\n        }\n        <Button type=\"submit\" onClick={submit}>Submit</Button>\n      </form>\n    </section>\n  );\n};","import React, { Component, RefObject, ReactChild } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './popup.scss';\nimport { ICustomLabels } from '../../common/models/config.model';\n\ninterface IPopupProps {\n  className?: string\n  style?: any\n  show: boolean\n  closeCallback: any\n  children: ReactChild\n  refCallback?: string | ((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined\n  customLabels?: ICustomLabels\n}\n\nlet portalRoot: HTMLDivElement = document.getElementById('popup-portal') as HTMLDivElement;\nif (!portalRoot) {\n  portalRoot = document.createElement('div');\n  portalRoot.setAttribute('id', 'popup-portal');\n  document.body.append(portalRoot);\n}\n\nclass PortalPopup extends Component {\n  private el: HTMLElement;\n\n  constructor(props: any) {\n    super(props);\n\n    this.el = document.createElement('div');\n  }\n\n  componentDidMount = () => {\n    portalRoot.appendChild(this.el);\n  }\n\n  componentWillUnmount = () => {\n    portalRoot.removeChild(this.el);\n  }\n\n  render() {\n    return ReactDOM.createPortal(this.props.children, this.el);\n  }\n}\n\nexport class Popup extends Component<IPopupProps> {\n  render() {\n    const style: any = Object.assign({}, { display: this.props.show ? 'block' : 'none' }, this.props.style || {});\n    const closeLabel = this.props.customLabels?.buttons?.closeForm || 'Close';\n\n    return (\n      <PortalPopup>\n        {\n          this.props.show ?\n            <div className={`popup ${this.props.className || ''}`} style={style}>\n              <div className=\"overlay\" onClick={(e: any) => this.props.closeCallback(e)}></div>\n              <div className=\"popup-content\" ref={this.props.refCallback}>\n                {this.props.children}\n                <button title={closeLabel} className=\"close-popup\" onClick={(e: any) => this.props.closeCallback(e)}>\n                  <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div> :\n            null\n        }\n      </PortalPopup>\n    );\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this._handleKeyDown.bind(this));\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this._handleKeyDown.bind(this));\n  }\n\n  _handleKeyDown = (e: KeyboardEvent) => {\n    const { show, closeCallback } = this.props;\n\n    if (show && e.keyCode === 27) {\n      closeCallback(e);\n    }\n  }\n};","import { IConfigInputField } from '../common/models/config.model';\n\nclass FileHelpers {\n\n  public isMultipartForm(fields: IConfigInputField[]): boolean {\n    for (const fieldIndex in fields) {\n      let field = fields[fieldIndex];\n\n      if (field.type === 'file') {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  \n}\n\nexport const fileHelpers = new FileHelpers();","import React, { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { Popup } from '../popup/popup.comp';\nimport {\n  IConfigInputField,\n  IConfigGetSingleMethod,\n  IConfigPostMethod,\n  IConfigPutMethod,\n  ICustomLabels\n} from '../../common/models/config.model';\nimport { FormRow } from '../formRow/formRow.comp';\nimport { Button } from '../button/button.comp';\nimport { Loader } from '../loader/loader.comp';\nimport { dataHelpers } from '../../helpers/data.helpers';\nimport { fileHelpers } from '../../helpers/file.helpers';\nimport { IAppContext } from '../app.context';\nimport { withAppContext } from '../withContext/withContext.comp';\n\nimport './formPopup.scss';\n\nconst flatten = require('flat');\nconst unflatten = require('flat').unflatten;\n\ninterface IProps {\n  context: IAppContext\n  title: string\n  fields: IConfigInputField[]\n  rawData?: any\n  getSingleConfig?: IConfigGetSingleMethod\n  methodConfig: IConfigPostMethod | IConfigPutMethod\n  closeCallback: (reloadData: boolean) => void\n  submitCallback: (body: any, containFiles: boolean) => void\n}\n\nexport const FormPopup = withAppContext(({ context, title, fields, rawData, getSingleConfig, methodConfig, submitCallback, closeCallback }: IProps) => {\n  const fieldsCopy: IConfigInputField[] = JSON.parse(JSON.stringify(fields));\n  const { httpService, activePage, config } = context;\n  const [loading, setLoading] = useState<boolean>(true);\n  const [formFields, setFormFields] = useState<IConfigInputField[]>([]);\n  const [finalRawData, setFinalRawData] = useState<any>(null);\n  const pageHeaders: any = activePage?.requestHeaders || {};\n  const customLabels: ICustomLabels | undefined = { ...config?.customLabels, ...activePage?.customLabels };\n\n  async function initFormFields() {\n    let finalRawData: any = rawData || {};\n\n    if (getSingleConfig && getSingleConfig.url) {\n      try {\n        const { url, requestHeaders, actualMethod, dataPath, queryParams } = getSingleConfig;\n        const result = await httpService.fetch({\n          method: actualMethod || 'get',\n          origUrl: url,\n          queryParams,\n          headers: Object.assign({}, pageHeaders,  requestHeaders || {}),\n          rawData,\n        });\n\n        const extractedData = dataHelpers.extractDataByDataPath(result, dataPath);\n\n        if (extractedData && typeof extractedData === 'object') {\n          finalRawData = extractedData;\n        }\n      } catch (e) {\n        console.error('Could not load single item\\'s data.', e);\n        toast.error('Could not load single item\\'s data.');\n      }\n    }\n\n    setFinalRawData(finalRawData); // Store the raw data for later.\n\n    const flattenData = flatten(finalRawData || {});\n\n    setFormFields(fieldsCopy.map((field) => {\n      let key = field.name;\n\n      field.originalName = field.name;\n\n      if (field.dataPath) {\n        key = `${field.dataPath}.${field.name}`;\n      }\n\n      // Changing field name to include datapath\n      // This will use us later for unflatten the final object\n      field.name = key;\n\n      if (dataHelpers.checkIfFieldIsObject(field)) {\n        if (finalRawData[key] || field.value) {\n          field.value = JSON.stringify(finalRawData[key] || field.value, null, '  ') || '';\n        }\n        return field;\n      }\n\n      if (field.type === 'array') {\n        field.value = finalRawData[key] || field.value || [];\n        return field;\n      }\n\n      if (typeof flattenData[key] !== 'undefined') {\n        field.value = flattenData[key];\n      } else {\n        // important in order to prevent controlled / uncontrolled components error\n        field.value = typeof field.value === 'undefined' ? '' : field.value;\n      }\n\n      return field;\n    }));\n\n    setLoading(false);\n  }\n\n  async function submitForm(e: any) {\n    e.preventDefault();\n\n    const finalObject: any = (methodConfig as IConfigPutMethod).includeOriginalFields ? Object.assign({}, finalRawData) : {};\n    const formData = new FormData();\n    const containFiles: boolean = fileHelpers.isMultipartForm(formFields);\n    let validationError = null;\n\n    formFields.forEach((field) => {\n      if (field.type === 'file') {\n        const fileInput: any = document.querySelector(`input[name=\"${field.name || 'file'}\"]`) as HTMLInputElement;\n\n        if (fileInput.files.length > 0) {\n          const firstFile = fileInput.files[0];\n          formData.append(field.name || 'file', firstFile, firstFile.name);\n        }\n        return;\n      }\n\n      finalObject[field.name] = field.value;\n\n      if (containFiles) {\n        formData.append(field.name, field.value);\n      }\n\n      if (field.required && field.type !== 'boolean' && !field.value) {\n        validationError = 'Please fill up all required fields.';\n      }\n\n      if (dataHelpers.checkIfFieldIsObject(field) && field.value) {\n        try {\n          finalObject[field.name] = JSON.parse(field.value);\n        } catch (e) {\n          validationError = `Invalid JSON for field \"${field.name}\".`;\n        }\n      }\n\n      if (field.type === 'boolean') {\n        finalObject[field.name] = field.value || false;\n      }\n\n      if (field.type === 'encode') {\n        finalObject[field.name] = encodeURIComponent(field.value);\n      }\n    });\n\n    if (validationError) {\n      toast.error(validationError);\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const body = containFiles ? formData : unflatten(finalObject);\n      await submitCallback(body, containFiles);\n\n      toast.success('Success!');\n\n      closeCallback(true);\n    } catch (e) {\n      toast.error(e.message);\n    }\n\n    setLoading(false);\n  }\n\n  function formChanged(fieldName: string, value: any) {\n    let updatedFormFields: IConfigInputField[] = JSON.parse(JSON.stringify(formFields));\n\n    updatedFormFields = updatedFormFields.map((field: IConfigInputField) => {\n      if (field.name === fieldName) {\n        field.value = value;\n      }\n\n      return field;\n    });\n\n    setFormFields(updatedFormFields);\n  }\n\n  useEffect(() => {\n    initFormFields();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Popup\n      show={true}\n      className=\"form-popup\"\n      closeCallback={() => closeCallback(false)}\n      customLabels={customLabels}\n    >\n      <React.Fragment>\n        <h2>{title}</h2>\n        <section>\n          {\n            loading ?\n            <Loader /> :\n            <form onSubmit={submitForm}>\n              {\n                formFields.map((field, idx) => {\n                  return (\n                    <FormRow\n                      key={`field_${idx}`}\n                      field={field}\n                      onChange={formChanged}\n                      showReset={!field.type || field.type === 'text'}\n                    />\n                  );\n                })\n              }\n              <div className=\"buttons-wrapper center\">\n                <Button type=\"submit\" onClick={submitForm} color=\"green\">Submit</Button>\n              </div>\n            </form>\n          }\n        </section>\n      </React.Fragment>\n    </Popup>\n  );\n});\n","import React from 'react';\n\nimport './filterField.scss';\n\ninterface IProps {\n  onChange: (filter: string) => void\n}\n\nexport const FilterField = ({ onChange }: IProps) => {\n  return (\n    <section className=\"filter-wrapper\">\n      <h5>Filter:</h5>\n      <div className=\"form-row\">\n        <input type=\"text\" placeholder=\"Search...\" onChange={(e) => onChange(e.target.value.toLowerCase())} />\n      </div>\n    </section>\n  );\n};","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport * as QueryString from 'query-string';\nimport { toast } from 'react-toastify';\nimport { orderBy } from 'natural-orderby';\nimport { find, remove } from 'lodash';\n\nimport { IAppContext } from '../app.context';\nimport { IConfigPage, IConfigMethods, IConfigGetAllMethod, IConfigPostMethod, IConfigPutMethod, IConfigDeleteMethod, IConfigInputField, IConfigCustomAction, IConfigGetSingleMethod, ICustomLabels, IConfigPagination } from '../../common/models/config.model';\nimport { IPaginationState } from '../../common/models/states.model';\nimport { withAppContext } from '../withContext/withContext.comp';\nimport { Loader } from '../loader/loader.comp';\nimport { dataHelpers } from '../../helpers/data.helpers';\nimport { paginationHelpers } from '../../helpers/pagination.helpers';\nimport { Table } from '../table/table.comp';\nimport { Cards } from '../cards/cards.comp';\nimport { QueryParams } from '../queryParams/queryParams.comp';\nimport { Button } from '../button/button.comp';\nimport { FormPopup } from '../formPopup/formPopup.comp';\nimport { FilterField } from '../filterField/filterField.comp';\n\nimport './page.scss';\n\ninterface IProps {\n  context: IAppContext\n}\n\ninterface IPopupProps {\n  type: 'add' | 'update' | 'action'\n  title: string\n  config: IConfigPostMethod | IConfigPutMethod\n  submitCallback: (body: any, containFiles: boolean) => void\n  getSingleConfig?: IConfigGetSingleMethod\n  rawData?: {}\n}\n\nconst buildInitQueryParamsAndPaginationState = (\n  initQueryParams: IConfigInputField[],\n  paginationConfig?: IConfigPagination,\n): {\n  initQueryParams: IConfigInputField[],\n  initialPagination?: IPaginationState,\n} => {\n  const initialPagination: IPaginationState | undefined = paginationConfig ? {\n    type: paginationConfig.type,\n    page: parseInt(paginationConfig.params?.page?.value || '1'),\n    limit: parseInt(paginationConfig.params?.limit?.value || '10'),\n    descending: paginationConfig.params?.descending?.value === 'true' || false,\n    hasPreviousPage: false,\n    hasNextPage: false,\n    sortBy: paginationConfig.params?.sortBy?.value,\n  } : undefined;\n\n  if (paginationConfig) {\n    if (!find(initQueryParams, { name: 'page' })) {\n      initQueryParams.push({\n        name: paginationConfig?.params?.page?.name,\n        label: paginationConfig?.params?.page?.label || 'Page',\n        value: initialPagination?.page\n      });\n    }\n\n    if (paginationConfig?.params?.limit && !find(initQueryParams, { name: 'limit' })) {\n      initQueryParams.push({\n        name: paginationConfig.params.limit.name,\n        label: paginationConfig.params.limit.label || 'Limit',\n        value: initialPagination?.limit\n      });\n    }\n\n    if (paginationConfig?.params?.descending && !find(initQueryParams, { name: 'descending' })) {\n      initQueryParams.push({\n        name: paginationConfig.params.descending.name,\n        label: paginationConfig.params.descending.label || 'Descending',\n        value: initialPagination?.descending\n      });\n    }\n\n    if (paginationConfig?.params?.sortBy && !find(initQueryParams, { name: 'sortBy' })) {\n      initQueryParams.push({\n        name: paginationConfig.params.sortBy.name,\n        label: 'Sort by',\n        value: initialPagination?.sortBy\n      });\n    }\n  }\n\n  return {\n    initQueryParams,\n    initialPagination\n  };\n};\n\nconst PageComp = ({ context }: IProps) => {\n  const { page } = useParams();\n  const { push, location } = useHistory();\n  const { activePage, error, setError, httpService, config } = context;\n  const pageHeaders: any = activePage?.requestHeaders || {};\n  const pageMethods: IConfigMethods | undefined = activePage?.methods;\n  const customActions: IConfigCustomAction[] = activePage?.customActions || [];\n  const getAllConfig: IConfigGetAllMethod | undefined = pageMethods?.getAll;\n  const paginationConfig = getAllConfig?.pagination;\n  const infiniteScroll = paginationConfig?.type === 'infinite-scroll';\n  const getSingleConfig: IConfigGetSingleMethod | undefined = pageMethods?.getSingle;\n  const postConfig: IConfigPostMethod | undefined = pageMethods?.post;\n  const putConfig: IConfigPutMethod | undefined = pageMethods?.put;\n  const deleteConfig: IConfigDeleteMethod | undefined = pageMethods?.delete;\n  const customLabels: ICustomLabels | undefined = { ...config?.customLabels, ...activePage?.customLabels };\n  const addItemLabel = customLabels?.buttons?.addItem || '+ Add Item';\n  const addItemFormTitle = customLabels?.formTitles?.addItem || 'Add Item';\n  const editItemFormTitle = customLabels?.formTitles?.editItem || 'Update Item';\n  const { initQueryParams, initialPagination } = buildInitQueryParamsAndPaginationState(getAllConfig?.queryParams || [], paginationConfig);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [openedPopup, setOpenedPopup] = useState<null | IPopupProps>(null);\n  const [queryParams, setQueryParams] = useState<IConfigInputField[]>(initQueryParams);\n  const [pagination, setPagination] = useState<IPaginationState | undefined>(initialPagination);\n  const [items, setItems] = useState<any[]>([]);\n  const [filter, setFilter] = useState<string>('');\n\n  function closeFormPopup(refreshData: boolean = false) {\n    setOpenedPopup(null);\n\n    if (refreshData === true) {\n      if (pagination?.type === 'infinite-scroll') {\n        setItems([]);\n        const updatedParams = [...queryParams];\n        remove(updatedParams, param => ['page', 'limit'].includes(param.name));\n        setQueryParams(buildInitQueryParamsAndPaginationState(updatedParams, paginationConfig).initQueryParams);\n      } else {\n        getAllRequest();\n      }\n    }\n  }\n\n  async function openEditPopup(rawData: any) {\n    const params: IPopupProps = {\n      rawData,\n      type: 'update',\n      title: editItemFormTitle,\n      config: putConfig as IConfigPutMethod,\n      getSingleConfig,\n      submitCallback: async (body: any, containFiles: boolean) => {\n        return await updateItem(body, rawData, containFiles);\n      }\n    };\n\n    setOpenedPopup(params);\n  }\n\n  function openCustomActionPopup(rawData: any, action: IConfigCustomAction) {\n    const params: IPopupProps = {\n      rawData,\n      type: 'action',\n      title: action.name || 'Custom Action',\n      config: action as IConfigCustomAction,\n      submitCallback: async (body: any, containFiles: boolean) => {\n        return await performAction(body, rawData, action, containFiles);\n      }\n    };\n\n    setOpenedPopup(params);\n  }\n\n  async function performAction(body: any, rawData: any, action: IConfigCustomAction, containFiles: boolean) {\n    const { url, requestHeaders, actualMethod } = action;\n\n    return await httpService.fetch({\n      method: actualMethod || 'put',\n      origUrl: url,\n      rawData,\n      body: containFiles ? body : JSON.stringify(body),\n      headers: {\n        ...pageHeaders,\n        ...(requestHeaders || {}),\n        ...(containFiles ? {} : { 'content-type': 'application/json' })\n      },\n      responseType: 'boolean'\n    });\n  }\n\n  function extractQueryParams(params: IConfigInputField[]): IConfigInputField[] {\n    const parsedParams = QueryString.parse(location.search);\n    const finalQueryParams = params.map((queryParam) => {\n      if (typeof parsedParams[queryParam.name] !== 'undefined') {\n        queryParam.value = queryParam.type === 'boolean' ? (parsedParams[queryParam.name] === 'true') : decodeURIComponent(parsedParams[queryParam.name] as any);\n      } else {\n        queryParam.value = queryParam.value || '';\n      }\n      return queryParam;\n    });\n\n    setPagination(getUpdatedPaginationState(finalQueryParams))\n\n    return finalQueryParams;\n  }\n\n  async function getAllRequest() {\n    if (infiniteScroll && pagination?.page !== 1) {\n      setLoading(false);\n    } else {\n      setLoading(true);\n    }\n\n    setError(null);\n\n    try {\n      if (!getAllConfig) {\n        throw new Error('Get all method is not defined.');\n      }\n\n      if (paginationConfig && !pagination) {\n        throw new Error('Pagination not initialized.');\n      }\n\n      const { url, requestHeaders, actualMethod, dataPath, sortBy, dataTransform } = getAllConfig;\n      const result = await httpService.fetch({\n        method: actualMethod || 'get',\n        origUrl: url,\n        queryParams,\n        headers: Object.assign({}, pageHeaders, requestHeaders || {})\n      });\n      let extractedData = dataHelpers.extractDataByDataPath(result, dataPath);\n\n      if (!extractedData) {\n        throw new Error('Could not extract data from response.');\n      }\n\n      if (!Array.isArray(extractedData)) {\n        throw new Error('Extracted data is invalid.');\n      }\n\n      if (typeof dataTransform === 'function') {\n        extractedData = await dataTransform(extractedData);\n      }\n\n      const orderedItems = orderBy(extractedData, typeof sortBy === 'string' ? [sortBy] : (sortBy || []));\n\n      if (paginationConfig) {\n        const total = paginationConfig.fields?.total ? dataHelpers.extractDataByDataPath(result, paginationConfig.fields.total.dataPath) : undefined;\n        const newPaginationState = getUpdatedPaginationState(queryParams, total);\n        if (newPaginationState) {\n          setPagination(newPaginationState);\n        }\n      }\n\n      if (infiniteScroll) {\n        setItems([...items, ...orderedItems]);\n      } else {\n        setItems(orderedItems);\n      }\n\n    } catch (e) {\n      setError(e.message);\n    }\n\n    setLoading(false);\n  }\n\n  async function addItem(body: any, containFiles?: boolean) {\n    if (!postConfig) {\n      throw new Error('Post method is not defined.');\n    }\n\n    const { url, requestHeaders, actualMethod } = postConfig;\n\n    return await httpService.fetch({\n      method: actualMethod || 'post',\n      origUrl: url,\n      body: containFiles ? body : JSON.stringify(body),\n      headers: {\n        ...pageHeaders,\n        ...(requestHeaders || {}),\n        ...(containFiles ? {} : { 'content-type': 'application/json' })\n      },\n      responseType: 'boolean'\n    });\n  }\n\n  async function updateItem(body: any, rawData: any, containFiles?: boolean) {\n    if (!putConfig) {\n      throw new Error('Put method is not defined.');\n    }\n\n    const { url, requestHeaders, actualMethod } = putConfig;\n\n    return await httpService.fetch({\n      method: actualMethod || 'put',\n      origUrl: url,\n      rawData,\n      body: containFiles ? body : JSON.stringify(body),\n      headers: {\n        ...pageHeaders,\n        ...(requestHeaders || {}),\n        ...(containFiles ? {} : { 'content-type': 'application/json' })\n      },\n      responseType: 'boolean'\n    });\n  }\n\n  async function deleteItem(item: any) {\n    const approved: boolean = window.confirm('Are you sure you want to delete this item?');\n\n    if (!approved) {\n      return;\n    }\n\n    try {\n      if (!deleteConfig) {\n        throw new Error('Delete method is not defined.');\n      }\n\n      const { url, requestHeaders, actualMethod } = deleteConfig;\n      const success = await httpService.fetch({\n        method: actualMethod || 'delete',\n        origUrl: url,\n        rawData: item,\n        headers: Object.assign({}, pageHeaders, requestHeaders || {}),\n        responseType: 'boolean'\n      });\n\n      if (success) {\n        if (pagination?.type === 'infinite-scroll') {\n          setItems([]);\n          const updatedParams = [...queryParams];\n          remove(updatedParams, param => ['page', 'limit'].includes(param.name));\n          setQueryParams(buildInitQueryParamsAndPaginationState(updatedParams, paginationConfig).initQueryParams);\n        } else {\n          getAllRequest();\n        }\n      }\n    } catch (e) {\n      toast.error(e.message);\n    }\n  }\n\n  function submitQueryParams(updatedParams: IConfigInputField[], reset?: boolean) {\n    if (loading) {\n      return;\n    }\n    \n    if (reset) {\n      setItems([]);\n      remove(updatedParams, param => ['page', 'limit'].includes(param.name));\n      updatedParams = buildInitQueryParamsAndPaginationState(updatedParams, paginationConfig).initQueryParams;\n    }\n\n    setQueryParams(updatedParams);\n    setPagination(getUpdatedPaginationState(updatedParams));\n\n    let paramsToUrl = [...updatedParams];\n\n    if (paginationConfig?.type === 'infinite-scroll') {\n      paramsToUrl = paramsToUrl.filter(param => !['page', 'limit'].includes(param.name));\n    }\n\n    // Building query string\n    const queryState: string = paramsToUrl.map((queryParam, idx) => {\n      let value = queryParam.value;\n\n      if (queryParam.type === 'select' && value === '-- Select --') {\n          // default value means nothing was selected and thus we explicitly\n          // empty out the value in this case; otherwise the string '-- Select --'\n          // is used as the value for the given queryParams\n          value = '';\n      }\n\n      return `${idx === 0 ? '?' : ''}${queryParam.name}=${encodeURIComponent(value || '')}`;\n    }).join('&');\n\n    // Pushing query state to url\n    if (page && queryState) {\n      push(queryState);\n    }\n  }\n\n  function getUpdatedPaginationState(updatedParams: IConfigInputField[], total?: number): IPaginationState | undefined {\n    if (!paginationConfig) {\n      return;\n    }\n\n    const newState: IPaginationState = pagination ? pagination : {\n      type: paginationConfig.type,\n      page: parseInt(paginationConfig.params?.page?.value || '1'),\n      limit: parseInt(paginationConfig.params?.limit?.value || '10'),\n      descending: paginationConfig.params?.descending?.value === 'true' || false,\n      hasPreviousPage: false,\n      hasNextPage: false,\n      sortBy: paginationConfig.params?.sortBy?.value,\n    };\n\n    newState.total = total || pagination?.total;\n    newState.page = parseInt(updatedParams.find(param => param.name === paginationConfig?.params?.page?.name)?.value) || newState.page;\n    newState.limit = parseInt(updatedParams.find(param => param.name === paginationConfig?.params?.limit?.name)?.value) || newState.limit;\n    newState.descending = updatedParams.find(param => param.name === paginationConfig?.params?.descending?.name)?.value === 'true' || newState.descending;\n    newState.sortBy = updatedParams.find(param => param.name === paginationConfig?.params?.sortBy?.name)?.value || newState.sortBy;\n    newState.hasPreviousPage = paginationHelpers.hasPreviousPage(newState.page);\n    newState.hasNextPage = paginationHelpers.hasNextPage(newState.page, newState.limit, newState.total);\n    \n    return newState;\n  }\n\n  function renderItemsUI() {\n    if (loading) {\n      return <Loader />;\n    }\n\n    const fields = getAllConfig?.fields || getAllConfig?.display?.fields || [];\n    const fieldsToFilter = fields.filter((field) => (field.filterable)).map((field) => field.name);\n    let filteredItems = items;\n\n    if (filter && fieldsToFilter.length) {\n      filteredItems = items.filter((item) => {\n        let passFilter = false;\n        fieldsToFilter.forEach((fieldName) => {\n          const value = item[fieldName];\n          if (typeof value === 'string' && value.toLowerCase().indexOf(filter) >= 0) {\n            passFilter = true;\n          }\n        })\n        return passFilter;\n      });\n    }\n\n    if (!filteredItems.length) {\n      return <div className=\"app-error\">Nothing to see here. Result is empty.</div>;\n    }\n\n    const getNextPage = paginationConfig ? () => {\n      if (pagination?.page && queryParams.length > 0) {\n        const newPage = pagination?.page + 1;\n        const updatedParams = queryParams.map((param) => {\n          if (param.name === paginationConfig.params?.page?.name) {\n            return {\n              ...param,\n              value: newPage\n            }\n          }\n          return param;\n        });\n        submitQueryParams(updatedParams);\n      }\n    } : null;\n\n    const getPreviousPage = paginationConfig ? () => {\n      if (pagination?.page && pagination.page > 1 && queryParams.length > 0) {\n        const newPage = pagination?.page - 1;\n        const updatedParams = queryParams.map((param) => {\n          if (param.name === paginationConfig.params?.page?.name) {\n            return {\n              ...param,\n              value: newPage\n            }\n          }\n          return param;\n        });\n        submitQueryParams(updatedParams);\n      }\n    } : null;\n\n    const callbacks = {\n      delete: deleteConfig ? deleteItem : null,\n      put: putConfig ? openEditPopup : null,\n      action: customActions.length ? openCustomActionPopup : () => { },\n      getNextPage,\n      getPreviousPage,\n    };\n\n    if (getAllConfig?.display.type === 'cards') {\n      return (\n        <Cards\n          pagination={pagination}\n          callbacks={callbacks}\n          fields={fields}\n          items={filteredItems}\n          customActions={customActions}\n          customLabels={customLabels}\n        />\n      );\n    }\n\n    return (\n      <Table\n        pagination={pagination}\n        callbacks={callbacks}\n        fields={fields}\n        items={filteredItems}\n        customActions={customActions}\n        customLabels={customLabels}\n      />\n    );\n  }\n\n  function renderPaginationStateLabel() {\n    if (loading || !items.length) {\n      return;\n    }\n\n    const currentCountFrom = (((pagination?.page || 1) - 1) * (pagination?.limit || 10)) + 1;\n    const currentCountTo = currentCountFrom + items.length - 1;\n    let label: string = `Showing results ${currentCountFrom}-${currentCountTo} out of ${pagination?.total} items`;\n\n    if (pagination?.type === 'infinite-scroll') {\n      label = `Showing ${pagination?.total} items`;\n    }\n\n    if (customLabels?.pagination?.itemsCount) {\n      label = customLabels?.pagination?.itemsCount\n              .replace(':currentCountFrom', currentCountFrom as any)\n              .replace(':currentCountTo', currentCountFrom as any)\n              .replace(':totalCount', pagination?.total as any);\n    }\n\n    return (\n      <p className=\"center pagination-state\">\n        {label}\n      </p>\n    );\n  }\n\n  function renderPageContent() {\n    const fields = getAllConfig?.fields || getAllConfig?.display?.fields || [];\n    const fieldsToFilter = fields.filter((field) => (field.filterable)).map((field) => field.name);\n\n    return (\n      <React.Fragment>\n        <QueryParams\n          initialParams={queryParams}\n          paginationConfig={paginationConfig}\n          submitCallback={submitQueryParams}\n        />\n        {\n          fieldsToFilter.length > 0 &&\n          <FilterField onChange={setFilter} />\n        }\n        {\n          pagination?.total &&\n          renderPaginationStateLabel()\n        }\n        {\n          error ?\n          <div className=\"app-error\">{error}</div> :\n          renderItemsUI()\n        }\n      </React.Fragment>\n    )\n  }\n\n  useEffect(() => {\n    const nextActivePage: IConfigPage | null = context?.config?.pages?.filter((p, pIdx) => p.id === page || (pIdx + 1) === parseInt(page || ''))[0] || null;\n    context.setActivePage(nextActivePage);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page]);\n\n  useEffect(() => {\n    const { initQueryParams, initialPagination } = buildInitQueryParamsAndPaginationState(getAllConfig?.queryParams || [], paginationConfig);\n\n    setItems([]);\n    setQueryParams(extractQueryParams(initQueryParams));\n    setPagination(initialPagination);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activePage]);\n\n  useEffect(() => {\n    // Load data when query params \n    getAllRequest();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [queryParams]);\n\n  return (\n    <div className=\"app-page\">\n      <header className=\"app-page-header\">\n        <hgroup>\n          <h2>{activePage?.name}</h2>\n          {\n            activePage?.description &&\n            <h4>{activePage?.description}</h4>\n          }\n        </hgroup>\n        {\n          postConfig &&\n          <Button className=\"add-item\" color=\"green\" onClick={() => setOpenedPopup({ type: 'add', title: addItemFormTitle, config: postConfig, submitCallback: addItem })}>{addItemLabel}</Button>\n        }\n      </header>\n      <main className=\"app-page-content\">\n        {renderPageContent()}\n      </main>\n      {\n        openedPopup &&\n        <FormPopup\n          title={openedPopup.title}\n          closeCallback={closeFormPopup}\n          submitCallback={openedPopup.submitCallback}\n          fields={openedPopup.config?.fields || []}\n          rawData={openedPopup.rawData}\n          getSingleConfig={openedPopup.getSingleConfig}\n          methodConfig={openedPopup.config}\n        />\n      }\n    </div>\n  );\n}\n\nexport const Page = withAppContext(PageComp);\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { IAppContext } from '../app.context';\nimport { withAppContext } from '../withContext/withContext.comp';\nimport { Button } from '../button/button.comp';\n\nimport './navigation.scss';\n\ninterface IProps {\n  context: IAppContext\n}\n\nconst NavigationComp = ({ context: { config } }: IProps) => {\n  const [isOpened, setIsOpened] = useState<boolean>(false);\n\n  return (\n    <nav className=\"app-nav\">\n      <Button className=\"app-nav-opener\" onClick={() => setIsOpened(!isOpened)}>\n        {\n          isOpened ? \n          <i className=\"fa fa-times\" aria-hidden=\"true\"></i> : \n          <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\n        }\n      </Button>\n\n      <div className={`app-nav-wrapper ${isOpened ? 'opened' : ''}`}>\n        <div className=\"app-nav-links\">\n          {\n            (config?.pages || []).map((page, idx) => (\n              <NavLink to={`/${page.id || idx + 1}`} activeClassName=\"active\" key={`page_${idx}`} onClick={() => setIsOpened(false)}>{page.name}</NavLink>\n            ))\n          }\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport const Navigation = withAppContext(NavigationComp);","import React from 'react';\nimport { ICustomStyles } from '../../common/models/config.model';\n\ninterface IProps {\n  styles: ICustomStyles\n}\n\nexport const CustomStyles = ({ styles }: IProps) => {\n  const cssVars = styles.vars || {};\n  const arr = [];\n  \n  for (const key in cssVars) {\n    arr.push(`--${key}: ${(cssVars as any)[key]}`);\n  }\n\n  return (\n    <style dangerouslySetInnerHTML={{ __html: `\n      :root {\n        ${arr.join(';')}\n      }\n    ` }}>\n    </style>\n  );\n};","import React, { useEffect, useState } from 'react';\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport ConfigService from '../services/config.service';\nimport { IConfig, IConfigPage } from '../common/models/config.model';\nimport { Page } from '../components/page/page.comp';\nimport { Navigation } from '../components/navigation/navigation.comp';\nimport { AppContext } from './app.context';\nimport HttpService from '../services/http.service';\nimport { CustomStyles } from './customStyles/customStyles.comp';\n\nimport './app.scss';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst httpService = new HttpService();\nconst defaultAppName: string = 'RESTool App';\n\nfunction changeFavicon(src: string) {\n  const link = document.createElement('link');\n  const oldLink = document.getElementById('favicon');\n  link.id = 'favicon';\n  link.rel = 'shortcut icon';\n  link.href = src;\n  if (oldLink) {\n   document.head.removeChild(oldLink);\n  }\n  document.head.appendChild(link);\n }\n\nfunction App() {\n  const [firstLoad, setFirstLoad] = useState<boolean>(true);\n  const [config, setConfig] = useState<IConfig | null>(null);\n  const [activePage, setActivePage] = useState<IConfigPage | null>(config?.pages?.[0] || null);\n  const [error, setError] = useState<string | null>(null);\n  const appName: string = config?.name || defaultAppName;\n  \n  async function loadConfig(url?: string): Promise<void> {\n    try {\n      const windowConfig = (window as any).RESTool?.config;\n      let remoteConfig: IConfig; \n      // Try to load config from window object first\n      if (!url && windowConfig) {\n        remoteConfig = Object.assign({}, windowConfig, {});\n      } else {\n        remoteConfig = url ? await ConfigService.getRemoteConfig(url) : await ConfigService.loadDefaultConfig();\n      }\n\n      // Setting global config for httpService\n      httpService.baseUrl = remoteConfig.baseUrl || '';\n      httpService.errorMessageDataPath = remoteConfig.errorMessageDataPath || '';\n      httpService.unauthorizedRedirectUrl = remoteConfig.unauthorizedRedirectUrl || '';\n      httpService.requestHeaders = remoteConfig.requestHeaders || {};\n      document.title = remoteConfig.name || defaultAppName;\n\n      if (remoteConfig?.favicon) {\n        changeFavicon(remoteConfig.favicon);\n      }\n\n      if (remoteConfig?.remoteUrl) {\n        return await loadConfig(remoteConfig.remoteUrl);\n      }\n\n      setConfig(remoteConfig);\n    } catch (e) {\n      console.error('Could not load config file', e);\n    }\n\n    setFirstLoad(false);\n  }\n\n  function scrollToTop(scrollDuration: number = 250) {\n    var cosParameter = window.scrollY / 2,\n    scrollCount = 0,\n    oldTimestamp = performance.now();\n\n    function step (newTimestamp: number) {\n      scrollCount += Math.PI / (scrollDuration / (newTimestamp - oldTimestamp));\n\n      if (scrollCount >= Math.PI) {\n        window.scrollTo(0, 0);\n      }\n\n      if (window.scrollY === 0) {\n        return;\n      }\n\n      window.scrollTo(0, Math.round(cosParameter + cosParameter * Math.cos(scrollCount)));\n      oldTimestamp = newTimestamp;\n      window.requestAnimationFrame(step);\n    }\n\n    window.requestAnimationFrame(step);\n  }\n\n  useEffect(() => {\n    loadConfig();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const { isValid, errorMessage } = ConfigService.validateConfig(config);\n\n    if (!isValid) {\n      setError(errorMessage);\n      toast.error(errorMessage);\n      return;\n    }\n  }, [config]);\n\n  return (\n    <div className=\"restool-app\">\n      {\n        !config ?\n        <div className=\"app-error\">\n          {firstLoad ? 'Loading Configuration...' : 'Could not find config file.'}\n        </div> :\n        <AppContext.Provider value={{ config, activePage, setActivePage, error, setError, httpService }}>\n          {\n            config.customStyles &&\n            <CustomStyles\n              styles={config.customStyles}\n            />\n          }\n          <Router>\n            <aside>\n              <h1 title={appName} onClick={() => scrollToTop()}>{appName}</h1>\n              {\n                <Navigation />\n              }\n            </aside>\n            {\n              config &&\n              <Switch>\n                <Route exact path=\"/:page\" component={Page} />\n                <Redirect path=\"/\" to={`/${config?.pages?.[0]?.id || '1'}`} />\n              </Switch>\n            }\n            <ToastContainer\n              position={toast.POSITION.TOP_CENTER}\n              autoClose={4000}\n              draggable={false}\n            />\n          </Router>\n        </AppContext.Provider>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config: any) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config: any) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config: any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}